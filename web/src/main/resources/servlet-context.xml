<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

	<context:component-scan base-package="com.cetc.backend.controller" />

    <bean id="userContext" class="com.cetc.backend.service.UserContext">
    </bean>

	<!-- Configures support for @Controllers -->
	<mvc:annotation-driven>
		<!-- set the encoding of message returned by @ResponseBody, use UTF-8 -->
		<mvc:message-converters>
    	<bean class = "org.springframework.http.converter.StringHttpMessageConverter">  
				<property name = "supportedMediaTypes">  
         	<list>
         		<value>application/json;charset=UTF-8</value>
         		<value>text/plain;charset=UTF-8</value>
         		<value>text/html;charset=UTF-8</value>         		
          </list>  
        </property>
      </bean>
		</mvc:message-converters>

		<mvc:argument-resolvers>
		    <bean class="com.cetc.backend.rest.security.UserHandlerMethodArgumentResolver">
				<property name="userContext" ref="userContext" />
			</bean>
			<bean class="org.springframework.data.web.PageableArgumentResolver" />
		</mvc:argument-resolvers>
	</mvc:annotation-driven>

    <mvc:resources mapping="/img/**" location="/img/" />
    <mvc:resources mapping="/js/**" location="/js/" />
    <mvc:resources mapping="/css/**" location="/css/" />
    <mvc:resources mapping="/fonts/**" location="/fonts/" />
    <mvc:resources mapping="/tpl/**" location="/tpl/" />
    <mvc:resources mapping="/vendor/**" location="/vendor/" />
    <mvc:resources mapping="/l10n/**" location="/l10n/" />
    <mvc:resources mapping="/index.html" location="/index.html" />

    <mvc:view-controller path="/" view-name="index"/>


    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <bean id="advice" class="com.cetc.backend.aop.AopAdvice" />
    <aop:config>
        <aop:aspect id="ad" ref="advice">
            <aop:after-returning method="controllerAfterReturn" pointcut="execution(* com.cetc.backend.controller.ConController.add(..))" />
            <aop:after-returning method="controllerAfterReturn" pointcut="execution(* com.cetc.backend.controller.ConController.edit(..))" />
            <aop:after-returning method="controllerAfterReturn" pointcut="execution(* com.cetc.backend.controller.ConController.*del*(..))" />

            <aop:after-returning method="netNodeAfterReturn" pointcut="execution(* com.cetc.backend.controller.NetNodeController.add(..))" />
            <aop:after-returning method="netNodeAfterReturn" pointcut="execution(* com.cetc.backend.controller.NetNodeController.edit(..))" />
            <aop:after-returning method="netNodeAfterReturn" pointcut="execution(* com.cetc.backend.controller.NetNodeController.*del*(..))" />

            <aop:after-returning method="poAfterReturn" pointcut="execution(* com.cetc.backend.controller.POController.add(..))" />
            <aop:after-returning method="poAfterReturn" pointcut="execution(* com.cetc.backend.controller.POController.edit(..))" />
            <aop:after-returning method="poAfterReturn" pointcut="execution(* com.cetc.backend.controller.POController.*del*(..))" />

            <aop:after-returning method="cleanDevAfterReturn" pointcut="execution(* com.cetc.backend.controller.CleanDevController.add(..))" />
            <aop:after-returning method="cleanDevAfterReturn" pointcut="execution(* com.cetc.backend.controller.CleanDevController.edit(..))" />
            <aop:after-returning method="cleanDevAfterReturn" pointcut="execution(* com.cetc.backend.controller.CleanDevController.*del*(..))" />

            <aop:after-returning method="restoreAfterReturn" pointcut="execution(* com.cetc.backend.controller.HandleDataBaseController.upload(..))" />
        </aop:aspect>
    </aop:config>

</beans>
